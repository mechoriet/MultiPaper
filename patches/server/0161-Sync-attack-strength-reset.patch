From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Sat, 18 Jun 2022 20:34:29 +1000
Subject: [PATCH] Sync attack strength reset


diff --git a/src/main/java/net/minecraft/world/entity/player/Player.java b/src/main/java/net/minecraft/world/entity/player/Player.java
index 2a91dc82cdc7569bbe1173adacb9e34252b0af22..dbe297078196d9fb1647d0733cda5732ccde72a8 100644
--- a/src/main/java/net/minecraft/world/entity/player/Player.java
+++ b/src/main/java/net/minecraft/world/entity/player/Player.java
@@ -125,6 +125,7 @@ import org.bukkit.event.entity.EntityExhaustionEvent;
 import org.bukkit.event.player.PlayerDropItemEvent;
 import org.bukkit.event.player.PlayerVelocityEvent;
 import puregero.multipaper.MultiPaperEntityInteractHandler;
+import puregero.multipaper.externalserverprotocol.PlayerResetAttackStrengthPosition;
 // CraftBukkit end
 
 public abstract class Player extends LivingEntity {
@@ -2247,6 +2248,7 @@ public abstract class Player extends LivingEntity {
     }
 
     public void resetAttackStrengthTicker() {
+        PlayerResetAttackStrengthPosition.broadcastRespawnPosition(this); // MultiPaper
         this.attackStrengthTicker = 0;
     }
 
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java b/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
index c456564cda27b1f81809494e71dba41269657b69..67711f3e8b67a3e3c7f6b58d52c773a286ade075 100644
--- a/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
@@ -69,6 +69,7 @@ public class ExternalServerPacketSerializer {
         addPacket(EntityTeleportPacket.class, EntityTeleportPacket::new);
         addPacket(ProjectileHitEntityPacket.class, ProjectileHitEntityPacket::new);
         addPacket(PlayerUseBlockPacket.class, PlayerUseBlockPacket::new);
+        addPacket(PlayerResetAttackStrengthPosition.class, PlayerResetAttackStrengthPosition::new);
     }
 
     private static void addPacket(Class<? extends ExternalServerPacket> clazz, Function<FriendlyByteBuf, ExternalServerPacket> deserializer) {
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerResetAttackStrengthPosition.java b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerResetAttackStrengthPosition.java
new file mode 100644
index 0000000000000000000000000000000000000000..3d0a7da115c33c2bbc7cf642781211801031b2f9
--- /dev/null
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerResetAttackStrengthPosition.java
@@ -0,0 +1,55 @@
+package puregero.multipaper.externalserverprotocol;
+
+import net.minecraft.network.FriendlyByteBuf;
+import net.minecraft.server.MinecraftServer;
+import net.minecraft.server.level.ServerPlayer;
+import net.minecraft.world.entity.player.Player;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import puregero.multipaper.ExternalServerConnection;
+import puregero.multipaper.MultiPaper;
+
+import java.util.UUID;
+
+public class PlayerResetAttackStrengthPosition extends ExternalServerPacket {
+
+    private static final Logger LOGGER = LogManager.getLogger(PlayerResetAttackStrengthPosition.class.getSimpleName());
+    private static boolean settingAttackStrength = false;
+
+    private final UUID uuid;
+
+    public PlayerResetAttackStrengthPosition(Player player) {
+        this.uuid = player.getUUID();
+    }
+
+    public PlayerResetAttackStrengthPosition(FriendlyByteBuf in) {
+        uuid = in.readUUID();
+    }
+
+    @Override
+    public void write(FriendlyByteBuf out) {
+        out.writeUUID(uuid);
+    }
+
+    @Override
+    public void handle(ExternalServerConnection connection) {
+        MultiPaper.runSync(() -> {
+            ServerPlayer player = MinecraftServer.getServer().getPlayerList().getPlayer(uuid);
+
+            if (player == null) {
+                LOGGER.warn("Tried to reset attack strength of a non-existent player with uuid " + uuid);
+                return;
+            }
+
+            settingAttackStrength = true;
+            player.resetAttackStrengthTicker();
+            settingAttackStrength = false;
+        });
+    }
+
+    public static void broadcastRespawnPosition(Player player) {
+        if (!settingAttackStrength && player instanceof ServerPlayer serverPlayer) {
+            MultiPaper.broadcastPacketToExternalServers(serverPlayer, new PlayerResetAttackStrengthPosition(player));
+        }
+    }
+}
